---
# Source: hellok8s-deployment/templates/storageclass.yaml
# templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: hello-k8s
    meta.helm.sh/release-namespace: default
  name: ebs-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
---
# Source: hellok8s-deployment/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hello-k8s-service
spec:
  selector:
    app: hello-k8s
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: NodePort
---
# Source: hellok8s-deployment/templates/deployment.yaml
# templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-k8s
  template:
    metadata:
      labels:
        app: hello-k8s
    spec:
      containers:
      - name: hello-k8s
        image: "638173936794.dkr.ecr.us-west-2.amazonaws.com/hello-k8s:latest"
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "mysql://hellouser:hellopass@terraform-20240911194908931400000001.csh1lpct4ou3.us-west-2.rds.amazonaws.com:3306/hello"
        - name: GREETING
          value: "Hello k8s from EKS!"
        volumeMounts:
          - name: secrets-store
            mountPath: "/mnt/secrets-store"
            readOnly: true
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets"
---
# Source: hellok8s-deployment/templates/secret-provider-class.yaml
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: aws-secrets
  namespace: default
spec:
  provider: aws
  parameters:
    objects: |
      - objectName: "arn:aws:secretsmanager:::secret:my-secret"
        objectType: "secretsmanager"
